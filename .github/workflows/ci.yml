# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  Testing:
    name: Testing
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14-alpine
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: mysecretpassword
          POSTGRES_DB : simple_bank
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        
    steps:
      ##github action to download and set go language in runner machine
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      ##grab all code from this github repo
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
    
      - name: Check go enviroment
        run: go env

      ##check mod file and download /tidy
      - name: Build Module
        run: |
          go mod download 
      ##Instal dependency To make fulfil ci test requerment 
      - name : Install dependency
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.0/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/bin/
          which migrate
      ##setup db schema(postgres)
      - name : Migrate Database
        run: make migrateup
      ##CI all file
      - name: Test Code
        run: make test
